diff --git a/src/server_main.cpp b/src/server_main.cpp
index 9d6bf88..f6b80d3 100644
--- a/src/server_main.cpp
+++ b/src/server_main.cpp
@@ -17,7 +17,20 @@
 INITIALIZE_EASYLOGGINGPP
 
 int main(int argc, char* argv[]){
-    START_EASYLOGGINGPP(argc, argv);    
+    START_EASYLOGGINGPP(argc, argv);
+
+    if(argc!=2){
+        std::cout<<"Invalid number of input arguments. Usage: "<<argv[0]<<" <SERVER_IPv4>";
+        return(EXIT_FAILURE);
+    }
+    std::cout<<argv[1];
+    std::string serverArgIP(argv[1]);
+    std::cout<<"Server IP Set to: "<<serverArgIP;
+    const char *homeDir = std::getenv("USERPROFILE");   
+    std::string rootArgDir(homeDir);
+    rootArgDir = rootArgDir + "\\tftpServer\\";
+    std::cout<<"TFTP Directory set to: "<<rootArgDir;
+
     el::Configurations defaultConf;
     defaultConf.setToDefault();
     defaultConf.set(el::Level::Global, el::ConfigurationType::Format, "%datetime [%level] [%thread] [%func][%line] %msg");
@@ -37,13 +50,13 @@ int main(int argc, char* argv[]){
     el::Loggers::reconfigureLogger("default", defaultConf);
 
     int defaultServerSock;
-	defaultServerSock = createUDPSocket(serverIP, TFTP_DEFAULT_PORT, TFTP_SERVER_SOCKET_TIMEOUT);
+	defaultServerSock = createUDPSocket(serverArgIP.c_str(), TFTP_DEFAULT_PORT, TFTP_SERVER_SOCKET_TIMEOUT);
     if(defaultServerSock == -1){
         LOG(FATAL) <<"Unable to open socket in default port "<<TFTP_DEFAULT_PORT;
         exit(EXIT_FAILURE);
     }
     END_SERVER_PROCESS = false;
-    STARK::getInstance().setRootDir(serverDir);
+    STARK::getInstance().setRootDir(rootArgDir.c_str());
 	std::thread incommingThread(handleIncommingRequests, defaultServerSock);
 	std::thread terminationThread(handleServerTermination);
 
